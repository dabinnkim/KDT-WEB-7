<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <title>Document</title>
  </head>
  <body>
    <!--비동기식이라 action 노필요-->
    <form name="visitor">
      <fieldset>
        <legend>방명록 등록</legend>
        <input type="text" id="name" placeholder="사용자 이름" /><br />
        <input type="text" id="comment" placeholder="방명록" /><br />
        <button type="button" onclick="createVisitor()">등록</button>
      </fieldset>
    </form>
    <hr />
    <table border="1" cellspacing="0">
      <thead>
        <tr>
          <th>ID</th>
          <th>작성자</th>

          <th>방명록</th>
          <th>수정</th>
          <th>삭제</th>
        </tr>
      </thead>
      <tbody>
        <% for(let i =0; i < data.length; i++) { %>
        <tr id="tr_<%= data[i].id%>">
          <td><%= data[i].id %></td>
          <td><%= data[i].name %></td>
          <td><%= data[i].comment %></td>
          <td><button type="button">수정</button></td>
          <td><button type="button">삭제</button></td>
        </tr>
        <% } %>
      </tbody>
    </table>
    <script>
      const tbody = document.querySelector("tbody");
      function createVisitor() {
        //폼태그 가져오기
        const form = document.forms["visitor"];
        console.log(form.name.value); // 입려한 id
        console.log(form.comment.value); //입력한 comment
        //아이디나 비번이 빈값이면 alert 출력
        if (form.name.value.length === 0 || form.comment.value.length === 0) {
          alert("이름 또는 방명록 기입하세요!");
          return;
        }

        if (form.name.value.length > 10) {
          alert("이름은 10글자 미만으로 작성해주세요");
          return;
        }

        axios({
          method: "post",
          url: "/visitor/write",
          data: {
            name: form.name.value,
            comment: form.comment.value,
          },
        })
          .then((res) => {
            //우리가 입력한 데이터
            return res.data;
          })
          .then((data) => {
            //insertAdjacentHTML : 특정요소의 html 추가
            //innnerHTML : 기존 노드 지우고 덮어 씌움
            const html = `
            <tr id="tr_${data.id}">
                <td>${data.id}</td>
                <td>${data.name}</td>
                <td>${data.comment}</td>
                <td><button type="button">수정</button></td>
                <td><button type="button">삭제</button></td>
            </tr>
            `;
            tbody.insertAdjacentHTML("beforeend", html); //beforeend : 가장 마지막 child, tobody의 가장 마지막에 변수 html가 추가된다는 뜻
          });
      }
    </script>
  </body>
</html>
